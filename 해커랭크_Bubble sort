https://www.hackerrank.com/challenges/ctci-bubble-sort/problem?h_r=internal-search&isFullScreen=true

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'countSwaps' function below.
     *
     * The function accepts INTEGER_ARRAY a as parameter.
     */

    public static void countSwaps(List<Integer> a) {
    // Write your code here
        TreeSet<Integer> tr = new TreeSet<>();
        int swap = 0, first = 0, last = 0;
        for(int i=a.size()-1; i>=0; i--){
            tr.add(a.get(i));
            swap += tr.headSet(a.get(i)).size();
        }
        
        first = tr.first();
        last = tr.last();
        
        System.out.println("Array is sorted in "+ swap+ " swaps.");
        System.out.println("First Element: "+first);
        System.out.println("Last Element: "+last);
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> a = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        Result.countSwaps(a);

        bufferedReader.close();
    }
}
