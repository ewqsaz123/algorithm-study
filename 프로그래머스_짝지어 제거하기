import java.util.*;

class Solution
{
//     public int solution(String s)
//     {
        
//         int start = 0, end = start+1;
        
//         while(start<end && end<s.length()){
//             if(s.charAt(start) == s.charAt(end)){
//                 //알파벳이 같으면
//                 s = s.replaceFirst(s.charAt(start)+""+s.charAt(end), "");
//                 if(start > 0){
//                     start--;
//                     end--;
//                 }
//             }else{
//                 start++;
//                 end++;
//             }
//         }
        
      
//         return (s.length() == 0)? 1:0;
//     }
    
//     public int solution(String s){
//         String dfs_s = dfs(s);
//         return (dfs_s.length() == 0)? 1:0;
//     }
    
//     public String dfs(String s){
//         if(s.length() <= 1) return s;
        
//         boolean b = false;
//         int i=1;
//         for(; i<s.length();i++){
//             if(s.charAt(i-1) == s.charAt(i)){
//                 b = true;
//                 break;
//             }
//         }
        
//         if(b){
//             return dfs(s.replaceFirst(s.charAt(i)+""+s.charAt(i), ""));
//         }else return s;
//     }
    
    
        public int solution(String s){
            
            Stack<Character> st = new Stack<>();
            st.push(s.charAt(0));
            for(int i=1;i<s.length();i++){
                if(st.isEmpty()) st.push(s.charAt(i));
                else{
                    if(st.peek() == s.charAt(i)) st.pop();
                    else st.push(s.charAt(i));
                }
            }
            
            return (st.isEmpty())?1:0;
        }
    
}
