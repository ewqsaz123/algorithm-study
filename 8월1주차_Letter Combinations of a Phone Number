import java.util.*;
class Solution {
    public List<String> letterCombinations(String digits) {
        //번호&숫자판
        ArrayList[] arr = new ArrayList[10];
        char c = 97;
        
        for(int i=2; i<=9;i++){
            arr[i] = new ArrayList<String>();
           
            arr[i].add(Character.toString(c++));
            arr[i].add(Character.toString(c++));
            arr[i].add(Character.toString(c++));  
           if(i==7 || i==9) arr[i].add(Character.toString(c++));
        }
        
        ArrayList<String> answer = new ArrayList<>();
        
        if(digits.length() == 0) return answer;
        for(int i=0;i<4;i++){
            int n = Integer.parseInt(digits.substring(0,1));
            if(i == 3){
                if(n != 7 && n!= 9) continue;
            }
            dfs(answer, digits, 1, (String)arr[n].get(i), arr);
        }
        
        
        return answer;
    }
    
    public void dfs(ArrayList<String> answer, String digits, int idx, String tmp, ArrayList[] arr){
        
        if(tmp.length() == digits.length()){
            //System.out.println(tmp);
            answer.add(tmp);
            return;
        }
        
        for(int i=0; i<4;i++){
            int n = Integer.parseInt(digits.substring(idx,idx+1));
            if(i == 3){
                if(n != 7 && n!= 9) continue;
            }
            dfs(answer, digits, idx+1, tmp+(String)arr[n].get(i), arr);
        }
        
        return;
    }
  }
